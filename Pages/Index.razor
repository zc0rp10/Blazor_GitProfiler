@page "/"
@inject HttpClient Http

<main>
    @if (githubUser.login != null)
    {

        <UserInfo UserData="githubUser" />
        @* <UserCharts /> *@
        <UserRepos ReposData="githubUserRepos" />
        <Footer />
    }
    else
    {
        <UserForm OnSubmit="SubmitHandler" />
    }
</main>

@code {
    GithubUser githubUser = new GithubUser();
    List<GithubRepo> githubUserRepos = new List<GithubRepo>();

    //TODO: Remove OnInitializedAsync() at end of project. Temp functions so you don't have to enter a user every time.
    protected override async Task OnInitializedAsync()
    {
        var tempUserJson = await Http.GetStringAsync($"https://api.github.com/users/zc0rp10");
        githubUser = JsonConvert.DeserializeObject<GithubUser>(tempUserJson);

        var tempRepoJson = await Http.GetStringAsync($"https://api.github.com/users/zc0rp10/repos");
        githubUserRepos = JsonConvert.DeserializeObject<List<GithubRepo>>(tempRepoJson).OrderByDescending(o => o.stargazers_count).ToList();
    }

    private async Task SubmitHandler(string inputUserName)
    {
        try
        {
            var rawJsonString = await Http.GetStringAsync($"https://api.github.com/users/{inputUserName}");
            githubUser = JsonConvert.DeserializeObject<GithubUser>(rawJsonString);
        }
        catch (Exception e)
        {
            System.Console.WriteLine(e.Message);
        }
    }

}
